# Generated by Django 4.2.7 on 2025-09-12 21:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('abogado', 'Abogado'), ('juez', 'Juez'), ('asistente', 'Asistente Legal'), ('administrador', 'Administrador')], default='abogado', max_length=20, verbose_name='Tipo de Usuario')),
                ('especialidad', models.CharField(choices=[('civil', 'Derecho Civil'), ('penal', 'Derecho Penal'), ('laboral', 'Derecho Laboral'), ('familia', 'Derecho de Familia'), ('comercial', 'Derecho Comercial'), ('administrativo', 'Derecho Administrativo'), ('constitucional', 'Derecho Constitucional'), ('otro', 'Otra Especialidad')], default='civil', max_length=20, verbose_name='Especialidad')),
                ('rut', models.CharField(help_text='Formato: 12.345.678-9', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de RUT inválido. Use: 12.345.678-9', regex='^\\d{1,2}\\.\\d{3}\\.\\d{3}-[\\dkK]$')], verbose_name='RUT')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('direccion', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('colegio_profesional', models.CharField(blank=True, max_length=100, null=True, verbose_name='Colegio Profesional')),
                ('numero_licencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Licencia')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('biografia', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/', verbose_name='Foto de Perfil')),
                ('es_activo', models.BooleanField(default=True, verbose_name='Usuario Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tema_preferido', models.CharField(choices=[('light', 'Claro'), ('dark', 'Oscuro'), ('auto', 'Automático')], default='light', max_length=10, verbose_name='Tema Preferido')),
                ('notificaciones_email', models.BooleanField(default=True, verbose_name='Notificaciones por Email')),
                ('notificaciones_push', models.BooleanField(default=True, verbose_name='Notificaciones Push')),
                ('recordar_filtros', models.BooleanField(default=True, verbose_name='Recordar Filtros')),
                ('plazos_por_pagina', models.PositiveIntegerField(default=20, verbose_name='Plazos por Página')),
                ('idioma', models.CharField(choices=[('es', 'Español'), ('en', 'English')], default='es', max_length=5, verbose_name='Idioma')),
                ('zona_horaria', models.CharField(default='America/Santiago', max_length=50, verbose_name='Zona Horaria')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
    ]
